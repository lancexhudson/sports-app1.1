{"ast":null,"code":"var _jsxFileName = \"/Users/lance/Documents/git-workspace/sports-app1.1/src/components/PollCard.js\",\n  _s = $RefreshSig$();\n// src/components/PollCard.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollCard = ({\n  polls\n}) => {\n  _s();\n  const [votes, setVotes] = useState({}); // { pollId: { optionId: count } }\n  const [showThanks, setShowThanks] = useState(null); // pollId for thank you popup\n\n  // Initialize votes from localStorage\n  useEffect(() => {\n    const initialVotes = {};\n    polls.forEach(poll => {\n      const saved = localStorage.getItem(`poll-${poll.id}`);\n      initialVotes[poll.id] = saved ? JSON.parse(saved) : poll.options.reduce((acc, opt) => ({\n        ...acc,\n        [opt.id]: 0\n      }), {});\n    });\n    setVotes(initialVotes);\n  }, [polls]);\n\n  // Save votes to localStorage\n  useEffect(() => {\n    Object.keys(votes).forEach(pollId => {\n      localStorage.setItem(`poll-${pollId}`, JSON.stringify(votes[pollId]));\n    });\n  }, [votes]);\n  const handleVote = (pollId, optionId) => {\n    // const pollVotes = votes[pollId];\n    // if (!pollVotes) return;\n\n    // Build a safe baseline for this poll's votes in case state hasn't initialized yet\n    const poll = polls.find(p => p.id === pollId);\n    const baseline = votes[pollId] || (poll ? poll.options.reduce((acc, opt) => ({\n      ...acc,\n      [opt.id]: 0\n    }), {}) : {});\n\n    // Check if user has already voted\n    // const hasVoted = Object.values(pollVotes).some((count) => count > 0);\n\n    const hasVoted = Object.values(baseline).some(count => count > 0);\n    if (hasVoted) return;\n\n    // Record vote\n    // setVotes((prev) => ({\n    //   ...prev,\n    //   [pollId]: {\n    //     ...prev[pollId],\n    //     [optionId]: prev[pollId][optionId] + 1,\n    //   },\n    // }));\n\n    setVotes(prev => {\n      const prevBaseline = prev[pollId] || (poll ? poll.options.reduce((acc, opt) => ({\n        ...acc,\n        [opt.id]: 0\n      }), {}) : {});\n      const updated = {\n        ...prevBaseline,\n        [optionId]: (prevBaseline[optionId] || 0) + 1\n      };\n      return {\n        ...prev,\n        [pollId]: updated\n      };\n    });\n\n    // Show thank you popup\n    setShowThanks(pollId);\n    setTimeout(() => setShowThanks(null), 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"poll-title\",\n      children: \"Fan Polls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"polls-list\",\n      children: polls.map(poll => {\n        const pollVotes = votes[poll.id] || {};\n        const totalVotes = Object.values(pollVotes).reduce((a, b) => a + b, 0);\n        const safeTotal = totalVotes > 0 ? totalVotes : 1; // Prevent NaN\n        const userVotedOption = Object.keys(pollVotes).find(id => pollVotes[id] > 0);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"poll-question\",\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-options\",\n            children: poll.options.map(opt => {\n              const percentage = Math.round((pollVotes[opt.id] || 0) / safeTotal * 100);\n              const isUserVote = userVotedOption === opt.id;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `poll-option ${userVotedOption ? 'voted' : 'clickable'}`,\n                onClick: () => !userVotedOption && handleVote(poll.id, opt.id),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"poll-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: opt.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"poll-pct\",\n                    children: [percentage, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"poll-bar-bg\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"poll-bar\",\n                    style: {\n                      width: `${percentage}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), isUserVote && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"your-vote\",\n                  children: \"Your vote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this)]\n              }, opt.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-total\",\n            children: [totalVotes, \" vote\", totalVotes !== 1 ? 's' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), showThanks === poll.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thank-you-popup\",\n            children: \"Thank you for your vote!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, poll.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PollCard, \"80phVDw/L/EKNDXFuhUmyRp81us=\");\n_c = PollCard;\nexport default PollCard;\nvar _c;\n$RefreshReg$(_c, \"PollCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PollCard","polls","_s","votes","setVotes","showThanks","setShowThanks","initialVotes","forEach","poll","saved","localStorage","getItem","id","JSON","parse","options","reduce","acc","opt","Object","keys","pollId","setItem","stringify","handleVote","optionId","find","p","baseline","hasVoted","values","some","count","prev","prevBaseline","updated","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pollVotes","totalVotes","a","b","safeTotal","userVotedOption","question","percentage","Math","round","isUserVote","onClick","text","style","width","_c","$RefreshReg$"],"sources":["/Users/lance/Documents/git-workspace/sports-app1.1/src/components/PollCard.js"],"sourcesContent":["// src/components/PollCard.js\nimport React, { useState, useEffect } from 'react';\n\nconst PollCard = ({ polls }) => {\n  const [votes, setVotes] = useState({}); // { pollId: { optionId: count } }\n  const [showThanks, setShowThanks] = useState(null); // pollId for thank you popup\n\n  // Initialize votes from localStorage\n  useEffect(() => {\n    const initialVotes = {};\n    polls.forEach((poll) => {\n      const saved = localStorage.getItem(`poll-${poll.id}`);\n      initialVotes[poll.id] = saved\n        ? JSON.parse(saved)\n        : poll.options.reduce((acc, opt) => ({ ...acc, [opt.id]: 0 }), {});\n    });\n    setVotes(initialVotes);\n  }, [polls]);\n\n  // Save votes to localStorage\n  useEffect(() => {\n    Object.keys(votes).forEach((pollId) => {\n      localStorage.setItem(`poll-${pollId}`, JSON.stringify(votes[pollId]));\n    });\n  }, [votes]);\n\n  const handleVote = (pollId, optionId) => {\n    // const pollVotes = votes[pollId];\n    // if (!pollVotes) return;\n\n    // Build a safe baseline for this poll's votes in case state hasn't initialized yet\n    const poll = polls.find((p) => p.id === pollId);\n    const baseline =\n      votes[pollId] ||\n      (poll\n        ? poll.options.reduce((acc, opt) => ({ ...acc, [opt.id]: 0 }), {})\n        : {});\n\n    // Check if user has already voted\n    // const hasVoted = Object.values(pollVotes).some((count) => count > 0);\n\n    const hasVoted = Object.values(baseline).some((count) => count > 0);\n    if (hasVoted) return;\n\n    // Record vote\n    // setVotes((prev) => ({\n    //   ...prev,\n    //   [pollId]: {\n    //     ...prev[pollId],\n    //     [optionId]: prev[pollId][optionId] + 1,\n    //   },\n    // }));\n\n    setVotes((prev) => {\n      const prevBaseline =\n        prev[pollId] ||\n        (poll\n          ? poll.options.reduce((acc, opt) => ({ ...acc, [opt.id]: 0 }), {})\n          : {});\n      const updated = {\n        ...prevBaseline,\n        [optionId]: (prevBaseline[optionId] || 0) + 1,\n      };\n      return { ...prev, [pollId]: updated };\n    });\n\n    // Show thank you popup\n    setShowThanks(pollId);\n    setTimeout(() => setShowThanks(null), 2000);\n  };\n\n  return (\n    <div className=\"poll-card\">\n      <h3 className=\"poll-title\">Fan Polls</h3>\n      <div className=\"polls-list\">\n        {polls.map((poll) => {\n          const pollVotes = votes[poll.id] || {};\n          const totalVotes = Object.values(pollVotes).reduce(\n            (a, b) => a + b,\n            0\n          );\n          const safeTotal = totalVotes > 0 ? totalVotes : 1; // Prevent NaN\n          const userVotedOption = Object.keys(pollVotes).find(\n            (id) => pollVotes[id] > 0\n          );\n\n          return (\n            <div key={poll.id} className=\"poll-item\">\n              <h4 className=\"poll-question\">{poll.question}</h4>\n              <div className=\"poll-options\">\n                {poll.options.map((opt) => {\n                  const percentage = Math.round(\n                    ((pollVotes[opt.id] || 0) / safeTotal) * 100\n                  );\n                  const isUserVote = userVotedOption === opt.id;\n\n                  return (\n                    <div\n                      key={opt.id}\n                      className={`poll-option ${\n                        userVotedOption ? 'voted' : 'clickable'\n                      }`}\n                      onClick={() =>\n                        !userVotedOption && handleVote(poll.id, opt.id)\n                      }\n                    >\n                      <div className=\"poll-label\">\n                        <span>{opt.text}</span>\n                        <span className=\"poll-pct\">{percentage}%</span>\n                      </div>\n                      <div className=\"poll-bar-bg\">\n                        <div\n                          className=\"poll-bar\"\n                          style={{ width: `${percentage}%` }}\n                        />\n                      </div>\n                      {isUserVote && (\n                        <span className=\"your-vote\">Your vote</span>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"poll-total\">\n                {totalVotes} vote{totalVotes !== 1 ? 's' : ''}\n              </div>\n\n              {/* Thank You Popup */}\n              {showThanks === poll.id && (\n                <div className=\"thank-you-popup\">Thank you for your vote!</div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PollCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}